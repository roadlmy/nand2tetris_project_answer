function Math.init 0
push constant 16
call Array.new 1
pop static 0
push static 0
push constant 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 1
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 2
add
push constant 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 3
add
push constant 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 4
add
push constant 16
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 5
add
push constant 32
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 6
add
push constant 64
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 7
add
push constant 128
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 8
add
push constant 256
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 9
add
push constant 512
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 10
add
push constant 1024
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 11
add
push constant 2048
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 12
add
push constant 4096
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 13
add
push constant 8192
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 14
add
push constant 16384
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 15
add
push constant 32767
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Math.bit 2
push argument 1
push constant 15
eq
not
if-goto LABEL_0
push argument 0
push constant 0
lt
return
goto LABEL_1
label LABEL_0
label LABEL_1
push constant 14
pop local 0
push argument 0
push constant 15
call Math.bit 2
not
if-goto LABEL_2
push argument 0
push constant 32767
add
push constant 1
add
pop local 1
goto LABEL_3
label LABEL_2
push argument 0
pop local 1
label LABEL_3
label LABEL_5
push local 0
push argument 1
gt
not
if-goto LABEL_4
push local 1
push static 0
push local 0
add
pop pointer 1
push that 0
push constant 1
sub
gt
not
if-goto LABEL_6
push local 1
push static 0
push local 0
add
pop pointer 1
push that 0
sub
pop local 1
goto LABEL_7
label LABEL_6
label LABEL_7
push local 0
push constant 1
sub
pop local 0
goto LABEL_5
label LABEL_4
push local 1
push static 0
push local 0
add
pop pointer 1
push that 0
push constant 1
sub
gt
return
function Math.abs 0
push argument 0
push argument 0
neg
call Math.max 2
return
function Math.multiply 3
push constant 0
pop local 1
push argument 0
pop local 2
push constant 0
pop local 0
label LABEL_9
push local 0
push constant 16
lt
not
if-goto LABEL_8
push argument 1
push local 0
call Math.bit 2
not
if-goto LABEL_10
push local 1
push local 2
add
pop local 1
goto LABEL_11
label LABEL_10
label LABEL_11
push local 2
push local 2
add
pop local 2
push local 0
push constant 1
add
pop local 0
goto LABEL_9
label LABEL_8
push local 1
return
function Math.divide 4
push argument 0
call Math.abs 1
pop local 0
push argument 1
call Math.abs 1
pop local 1
push local 0
push argument 0
eq
not
if-goto LABEL_12
push local 1
push argument 1
eq
not
if-goto LABEL_14
push constant 1
pop local 3
goto LABEL_15
label LABEL_14
push constant 1
neg
pop local 3
label LABEL_15
goto LABEL_13
label LABEL_12
push local 1
push argument 1
eq
not
if-goto LABEL_16
push constant 1
neg
pop local 3
goto LABEL_17
label LABEL_16
push constant 1
pop local 3
label LABEL_17
label LABEL_13
push local 1
push local 0
gt
push local 1
push constant 0
lt
or
not
if-goto LABEL_18
push constant 0
return
goto LABEL_19
label LABEL_18
label LABEL_19
push local 0
push constant 2
push local 1
call Math.multiply 2
call Math.divide 2
pop local 2
push local 0
push constant 2
push local 1
call Math.multiply 2
push local 2
call Math.multiply 2
sub
push local 1
lt
not
if-goto LABEL_20
push local 3
push constant 2
call Math.multiply 2
push local 2
call Math.multiply 2
return
goto LABEL_21
label LABEL_20
push local 3
push constant 2
push local 2
call Math.multiply 2
push constant 1
add
call Math.multiply 2
return
label LABEL_21
function Math.sqrt 2
push constant 0
pop local 1
push constant 7
pop local 0
push argument 0
push constant 32767
eq
not
if-goto LABEL_22
push constant 181
return
goto LABEL_23
label LABEL_22
label LABEL_23
label LABEL_25
push local 0
push constant 1
neg
gt
not
if-goto LABEL_24
push local 1
push static 0
push local 0
add
pop pointer 1
push that 0
add
push local 1
push static 0
push local 0
add
pop pointer 1
push that 0
add
call Math.multiply 2
push argument 0
push constant 1
add
lt
not
if-goto LABEL_26
push local 1
push static 0
push local 0
add
pop pointer 1
push that 0
add
pop local 1
goto LABEL_27
label LABEL_26
label LABEL_27
push local 0
push constant 1
sub
pop local 0
goto LABEL_25
label LABEL_24
push local 1
return
function Math.max 0
push argument 0
push argument 1
gt
not
if-goto LABEL_28
push argument 0
return
goto LABEL_29
label LABEL_28
push argument 1
return
label LABEL_29
function Math.min 0
push argument 0
push argument 1
lt
not
if-goto LABEL_30
push argument 0
return
goto LABEL_31
label LABEL_30
push argument 1
return
label LABEL_31
